"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2918],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>d});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var p=n.createContext({}),c=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},s=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},m="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=c(a),u=i,d=m["".concat(p,".").concat(u)]||m[u]||k[u]||r;return a?n.createElement(d,o(o({ref:t},s),{},{components:a})):n.createElement(d,o({ref:t},s))}));function d(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,o=new Array(r);o[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[m]="string"==typeof e?e:i,o[1]=l;for(var c=2;c<r;c++)o[c]=a[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},2690:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>k,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var n=a(7462),i=(a(7294),a(3905));const r={sidebar_position:4,title:"Package Specification"},o=void 0,l={unversionedId:"packages/package-specification",id:"packages/package-specification",title:"Package Specification",description:"TODO: this section is under construction",source:"@site/docs/packages/package-specification.md",sourceDirName:"packages",slug:"/packages/package-specification",permalink:"/docs/packages/package-specification",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/packages/package-specification.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"Package Specification"},sidebar:"tutorialSidebar",previous:{title:"Creating a Package",permalink:"/docs/packages/creating-a-package"},next:{title:"Cli",permalink:"/docs/category/cli"}},p={},c=[{value:"Packages format",id:"packages-format",level:2},{value:"Package name rules",id:"package-name-rules",level:3},{value:"The <code>package.yml</code> file",id:"the-packageyml-file",level:3},{value:"The <code>_manifest.yml</code> file",id:"the-_manifestyml-file",level:3},{value:"The <code>README.md</code> file",id:"the-readmemd-file",level:3},{value:"Repository format",id:"repository-format",level:2}],s={toc:c},m="wrapper";function k(e){let{components:t,...a}=e;return(0,i.kt)(m,(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"TODO: this section is under construction"),(0,i.kt)("p",null,"In this document, we are going to discuss the format specification\nfor Cocmd packages and repositories.\nIf you are trying to create your first package, we suggest reading\nthe ",(0,i.kt)("a",{parentName:"p",href:"../creating-a-package"},"Creating a Package")," section first,\nas that contains the basic information you'll need for most use-cases."),(0,i.kt)("p",null,"In the first part, we'll go through the structure of an Cocmd package,\nstarting from a top level view with the included files, all the way\ndown to the actual content.\nThen, the second part covers the structure a typical package repository."),(0,i.kt)("h2",{id:"packages-format"},"Packages format"),(0,i.kt)("p",null,"As we first introduced in the ",(0,i.kt)("a",{parentName:"p",href:"../creating-a-package"},"Creating a package")," section,\n",(0,i.kt)("strong",{parentName:"p"},"a package is a combination of YAML match files with some metadata.")),(0,i.kt)("p",null,"The most basic package ",(0,i.kt)("em",{parentName:"p"},"MUST")," contain these 3 files:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A ",(0,i.kt)("inlineCode",{parentName:"li"},"package.yml")," file, containing the snippets you want to share."),(0,i.kt)("li",{parentName:"ul"},"A ",(0,i.kt)("inlineCode",{parentName:"li"},"_manifest.yml")," file, containing the metadata of the package.\nThis includes the package's name, author and version, among other things."),(0,i.kt)("li",{parentName:"ul"},"A ",(0,i.kt)("inlineCode",{parentName:"li"},"README.md")," file, containing a description of the package,\nwritten using the ",(0,i.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Markdown"},"Markdown")," syntax.")),(0,i.kt)("p",null,"Optionally, a package can also contain:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A ",(0,i.kt)("inlineCode",{parentName:"li"},"LICENSE")," file, if you want to publish your package under a different license\nthan the ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/cocmd/hub/blob/main/LICENSE"},"default HUB one")," (MIT)."),(0,i.kt)("li",{parentName:"ul"},"Any number of additional YAML files, which can be used to split the matches across multiple\nfiles, to make them more manageable.")),(0,i.kt)("p",null,"In the following sections, we'll examine them in detail, but first we'll need\nto briefly discuss ",(0,i.kt)("em",{parentName:"p"},"package names"),"."),(0,i.kt)("h3",{id:"package-name-rules"},"Package name rules"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"A package name can only contain lowercase letters, numbers and the hypen symbol ",(0,i.kt)("inlineCode",{parentName:"strong"},"-"),".")),(0,i.kt)("p",null,"For example, the following are valid names:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"my-nice-package1234")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"great-package"))),(0,i.kt)("p",null,"While these are NOT valid names:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"My Package")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"my_package")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"nice@package"))),(0,i.kt)("h3",{id:"the-packageyml-file"},"The ",(0,i.kt)("inlineCode",{parentName:"h3"},"package.yml")," file"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"package.yml")," file is the entry-point of the package.\nIt contains the main matches (aka ",(0,i.kt)("em",{parentName:"p"},"snippets"),") for the current package, and\nits format is equivalent to the ",(0,i.kt)("inlineCode",{parentName:"p"},"$CONFIG/match/base.yml")," file, as explained ",(0,i.kt)("a",{parentName:"p",href:"../../matches/basics"},"here"),"."),(0,i.kt)("p",null,"As with regular match files, it can contain matches, global variables and import rules.\nA typical ",(0,i.kt)("inlineCode",{parentName:"p"},"package.yml")," file might look like the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="package.yml"',title:'"package.yml"'},'matches:\n  - trigger: ":hello"\n    replace: "Hello from package"\n\n  - trigger: ":another"\n    replace: "Another snippet from the example package"\n')),(0,i.kt)("h3",{id:"the-_manifestyml-file"},"The ",(0,i.kt)("inlineCode",{parentName:"h3"},"_manifest.yml")," file"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"_manifest.yml")," file contains the package ",(0,i.kt)("em",{parentName:"p"},"metadata"),", including the\npackage name, author and version.\nThis file is encoded in the ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/YAML"},"YAML syntax"),"."),(0,i.kt)("p",null,"A ",(0,i.kt)("inlineCode",{parentName:"p"},"_manifest.yml")," ",(0,i.kt)("em",{parentName:"p"},"MUST")," contain these fields:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"name")," should be the name of your package. It must be equal to the directory name containing the package."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"title"),' is the "read friendly" version of your package name.\nThis can contain all string characters, but it should be relatively short.'),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"description")," should contain a short description of your package."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"version")," contains the version of your package. We suggest to keep it at ",(0,i.kt)("inlineCode",{parentName:"li"},"0.1.0")," for new packages."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"author")," contains the author name.")),(0,i.kt)("p",null,"Optionally, the manifest can also contain these fields:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"homepage")," should be the link to your package's homepage. This could be a website, a documentation\npage or a Git repository.")),(0,i.kt)("admonition",{title:"Note about package versions",type:"info"},(0,i.kt)("p",{parentName:"admonition"},"As we discussed earlier, the ",(0,i.kt)("inlineCode",{parentName:"p"},"_manifest.yml")," file also contains the package version.\nThis package version should follow the standard ",(0,i.kt)("inlineCode",{parentName:"p"},"MAJOR.MINOR.PATCH")," format."),(0,i.kt)("p",{parentName:"admonition"},"When installing or updating a package, Cocmd uses the version to determine if an\nupdate should be performed or not.\nFor this reason, we suggest increasing the version after an update is made to the package."),(0,i.kt)("p",{parentName:"admonition"},"If you don't to this, you'll need to use the ",(0,i.kt)("inlineCode",{parentName:"p"},"--force")," option when updating.")),(0,i.kt)("h3",{id:"the-readmemd-file"},"The ",(0,i.kt)("inlineCode",{parentName:"h3"},"README.md")," file"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"README.md")," file contains a description of the package, formatted\nwith the ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Markdown"},"Markdown")," syntax."),(0,i.kt)("p",null,"The main purpose of this file is to describe and document the package.\nFor example, if your package depends on an external script or command,\nthis is a good place to mention it."),(0,i.kt)("h2",{id:"repository-format"},"Repository format"),(0,i.kt)("p",null,"TODO"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Repository Format",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Multiple versions format"),(0,i.kt)("li",{parentName:"ul"},"Flat format")))))}k.isMDXComponent=!0}}]);