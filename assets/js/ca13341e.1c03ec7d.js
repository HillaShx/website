"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7324],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},l=Object.keys(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=i.createContext({}),s=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=s(e.components);return i.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=s(n),m=a,h=u["".concat(p,".").concat(m)]||u[m]||d[m]||l;return n?i.createElement(h,r(r({ref:t},c),{},{components:n})):i.createElement(h,r({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,r=new Array(l);r[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[u]="string"==typeof e?e:a,r[1]=o;for(var s=2;s<l;s++)r[s]=n[s];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5868:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var i=n(7462),a=(n(7294),n(3905));const l={sidebar_position:1,title:"App-specific configurations"},r=void 0,o={unversionedId:"configuration/app-specific-configurations",id:"configuration/app-specific-configurations",title:"App-specific configurations",description:"For simple use-cases, tuning Cocmd's options in the config/default.yml file works well,",source:"@site/docs/configuration/app-specific-configurations.md",sourceDirName:"configuration",slug:"/configuration/app-specific-configurations",permalink:"/docs/configuration/app-specific-configurations",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/configuration/app-specific-configurations.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"App-specific configurations"},sidebar:"tutorialSidebar",previous:{title:"Basics",permalink:"/docs/configuration/basics"},next:{title:"Include and Exclude rules",permalink:"/docs/configuration/include-and-exclude"}},p={},s=[{value:"Disabling Cocmd when using a certain app",id:"disabling-cocmd-when-using-a-certain-app",level:3},{value:"Enable or disable some matches while using a specific application",id:"enable-or-disable-some-matches-while-using-a-specific-application",level:3},{value:"Understanding configuration inheritance",id:"understanding-configuration-inheritance",level:2},{value:"Filters",id:"filters",level:2},{value:"Finding the right filters",id:"finding-the-right-filters",level:3},{value:"Advanced use-cases for <code>filter_title</code>",id:"advanced-use-cases-for-filter_title",level:4}],c={toc:s},u="wrapper";function d(e){let{components:t,...l}=e;return(0,a.kt)(u,(0,i.Z)({},c,l,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"For simple use-cases, tuning Cocmd's options in the ",(0,a.kt)("inlineCode",{parentName:"p"},"config/default.yml")," file works well,\nbut as your needs become more complex, that mechanism might prove limited.\nFor example, you might want to customize the way Cocmd behaves while using a certain\napp, or disabling it entirely when using another."),(0,a.kt)("p",null,"App-specific configurations are designed to handle these use-cases.\nIn a nutshell, they are made of two important ingredients:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Some rules that define when the configuration should be active"),(0,a.kt)("li",{parentName:"ul"},"The actual configuration options")),(0,a.kt)("h3",{id:"disabling-cocmd-when-using-a-certain-app"},"Disabling Cocmd when using a certain app"),(0,a.kt)("p",null,"Let's start with a simple example.\nLet's say we would like to disable Cocmd while using Telegram.\nTo do so, we'll create an app-specific configuration.\nStart by creating the ",(0,a.kt)("inlineCode",{parentName:"p"},"config/telegram.yml")," file, with the following content:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="$CONFIG/config/telegram.yml"',title:'"$CONFIG/config/telegram.yml"'},"filter_exec: Telegram\nenable: false\n")),(0,a.kt)("p",null,"Let's analyze the configuration step by step:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"We first specify the ",(0,a.kt)("inlineCode",{parentName:"p"},"filter_exec")," rule, which defines when this app-specific config\nwill be active.\nIn this case, the configuration will be active if the current app's\nexecutable path contains the string \"Telegram\".\nYou'll learn all about available filters in the ",(0,a.kt)("a",{parentName:"p",href:"#filters"},"Filters section"),".")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"We then set ",(0,a.kt)("inlineCode",{parentName:"p"},"enable: false"),", disabling Cocmd."))),(0,a.kt)("p",null,"Cocmd will now use the configuration defined in the ",(0,a.kt)("inlineCode",{parentName:"p"},"config/telegram.yml")," file\nwhile using Telegram and the default one while using other applications."),(0,a.kt)("p",null,"Inside the app-specific configuration you can define most of the options you would customize\nin your ",(0,a.kt)("inlineCode",{parentName:"p"},"config/default.yml")," file, with a few exceptions. You'll find a list of\ncustomizable options in the ",(0,a.kt)("a",{parentName:"p",href:"../options"},"Options section"),"."),(0,a.kt)("h3",{id:"enable-or-disable-some-matches-while-using-a-specific-application"},"Enable or disable some matches while using a specific application"),(0,a.kt)("p",null,"Another common use-case for app-specific configurations is to ",(0,a.kt)("strong",{parentName:"p"},"selectively\nenable some matches while using a particular application"),".\nFor example, we might want to enable some code snippets while\nusing Visual Studio Code or IntelliJ Idea, but not inside other apps."),(0,a.kt)("p",null,"This use-case is described in the ",(0,a.kt)("a",{parentName:"p",href:"../include-and-exclude"},"Include and Exclude rules"),"\nsection."),(0,a.kt)("h2",{id:"understanding-configuration-inheritance"},"Understanding configuration inheritance"),(0,a.kt)("p",null,"App-specific configurations extend the default one.\nFor example, if your ",(0,a.kt)("inlineCode",{parentName:"p"},"config/default.yml")," file defines ",(0,a.kt)("inlineCode",{parentName:"p"},"option_A: 10")," and\n",(0,a.kt)("inlineCode",{parentName:"p"},"option_B: 20"),", and your app-specific configuration ",(0,a.kt)("inlineCode",{parentName:"p"},"config/specific.yml")," defines\n",(0,a.kt)("inlineCode",{parentName:"p"},"option_B: 30"),", the latter will be equivalent to:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"option_A: 10\noption_B: 30\n")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"option_A")," parameter was inherited by the default configuration, as shown in\nthis schema:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Config inheritance",src:n(7459).Z,width:"1008",height:"430"})),(0,a.kt)("p",null,"The key concept to remember is that ",(0,a.kt)("strong",{parentName:"p"},"the app-specific configuration will be equivalent\nto the default one, except for the options it changes directly"),"."),(0,a.kt)("h2",{id:"filters"},"Filters"),(0,a.kt)("p",null,"As said earlier, one of the key ingredients for app-specific configurations are\nthe filtering rules. These determine which configuration is active at any given time."),(0,a.kt)("p",null,"These are the currently available filters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Filter"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"),(0,a.kt)("th",{parentName:"tr",align:null},"Windows Support"),(0,a.kt)("th",{parentName:"tr",align:null},"MacOS Support"),(0,a.kt)("th",{parentName:"tr",align:null},"Linux Support"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"filter_title")),(0,a.kt)("td",{parentName:"tr",align:null},"Filter based on the current window title."),(0,a.kt)("td",{parentName:"tr",align:null},"Full support"),(0,a.kt)("td",{parentName:"tr",align:null},"Full support"),(0,a.kt)("td",{parentName:"tr",align:null},"Full support")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"filter_exec")),(0,a.kt)("td",{parentName:"tr",align:null},"Filter based on the current application's executable path. For example, ",(0,a.kt)("inlineCode",{parentName:"td"},"C:\\Programs\\Telegram.exe")),(0,a.kt)("td",{parentName:"tr",align:null},"Full support"),(0,a.kt)("td",{parentName:"tr",align:null},"Full support"),(0,a.kt)("td",{parentName:"tr",align:null},"Partial support")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"filter_class")),(0,a.kt)("td",{parentName:"tr",align:null},"Filter based on the current window class. This is mostly relevant on Linux"),(0,a.kt)("td",{parentName:"tr",align:null},"Uses the application executable path instead"),(0,a.kt)("td",{parentName:"tr",align:null},"Uses the App identifier instead"),(0,a.kt)("td",{parentName:"tr",align:null},"Full support")))),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"filter_title"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"filter_exec")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"filter_class")," filters accept a ",(0,a.kt)("strong",{parentName:"p"},"regex")," as parameter, so make sure to escape the special characters properly."),(0,a.kt)("p",null,"For example, if the current app title is ",(0,a.kt)("inlineCode",{parentName:"p"},"Google Chrome"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"filter_title: Chrome")," will match, as the string ",(0,a.kt)("inlineCode",{parentName:"li"},"Google Chrome")," matches the regex ",(0,a.kt)("inlineCode",{parentName:"li"},"Chrome")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},'filter_title: "^Chrome$"')," will NOT match, as that regex matches only an app with the title ",(0,a.kt)("em",{parentName:"li"},"equal")," to ",(0,a.kt)("inlineCode",{parentName:"li"},"Chrome"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},'filter_title: "^Google Chrome$"')," will match, as the string ",(0,a.kt)("inlineCode",{parentName:"li"},"Google Chrome")," matches exactly the regex ",(0,a.kt)("inlineCode",{parentName:"li"},"Google Chrome"),".")),(0,a.kt)("h3",{id:"finding-the-right-filters"},"Finding the right filters"),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"The method described below requires Cocmd v2.1.1 or above, so make sure to have an up-to-date version.")),(0,a.kt)("p",null,"Now that we covered the basics, let's discuss how to choose the right\nfilter for your use-case."),(0,a.kt)("p",null,"We should start by checking what information Cocmd is detecting for\nthe current application, as that's what Cocmd will use in the matching phase."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Open the desired application (in this example, I've opened the macOS's TextEdit app).")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Inside the application, type ",(0,a.kt)("inlineCode",{parentName:"p"},"#detect#")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"In alternative, you can also open the Search bar, type ",(0,a.kt)("inlineCode",{parentName:"li"},">")," and then select ",(0,a.kt)("inlineCode",{parentName:"li"},"Show active application information (detect)")))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"A window should open, displaying the information about the active application:"))),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Detecting the active app",src:n(7071).Z,width:"1110",height:"770"})),(0,a.kt)("p",null,"These are the values of ",(0,a.kt)("inlineCode",{parentName:"p"},"title"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"exec")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"class")," detected for the active application."),(0,a.kt)("p",null,"In this example, a good filter could be:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'filter_class: "TextEdit"\n')),(0,a.kt)("p",null,"Which would match against the detected class ",(0,a.kt)("inlineCode",{parentName:"p"},"com.apple.TextEdit"),"."),(0,a.kt)("p",null,"A good rule of thumb is to choose either the ",(0,a.kt)("inlineCode",{parentName:"p"},"filter_exec")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"filter_class")," filters\nfor basic use-cases, as these values tend to be stable.\nIn the next section, we'll discuss an interesting use-case for ",(0,a.kt)("inlineCode",{parentName:"p"},"filter_title"),"."),(0,a.kt)("admonition",{title:"Filters are often platform-dependent",type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"If you are sharing your configuration across different machines, an important consideration\nto make is that the same filters might not work across different operating systems."),(0,a.kt)("p",{parentName:"admonition"},"For example, if you define a ",(0,a.kt)("inlineCode",{parentName:"p"},"filter_exec")," as follows:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"filter_exec: Telegram.exe\n")),(0,a.kt)("p",{parentName:"admonition"},"That would match Telegram on Windows, but not on macOS or Linux.\nTo solve the problem, you can either create filters that match all the possible\napp locations/classes (filters are regexes, so you can also use\n",(0,a.kt)("a",{parentName:"p",href:"https://www.regular-expressions.info/alternation.html"},"alternation"),")\nor you can create different app-specific configurations based on the platform,\nsuch as ",(0,a.kt)("inlineCode",{parentName:"p"},"config/telegram_win.yml")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"config/telegram_linux.yml"),".")),(0,a.kt)("h4",{id:"advanced-use-cases-for-filter_title"},"Advanced use-cases for ",(0,a.kt)("inlineCode",{parentName:"h4"},"filter_title")),(0,a.kt)("p",null,"As mentioned in the previous section, ",(0,a.kt)("inlineCode",{parentName:"p"},"filter_title")," is trickier to use than\n",(0,a.kt)("inlineCode",{parentName:"p"},"filter_class")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"filter_exec"),", as its value is not stable over time.\nThe value often reflect the ",(0,a.kt)("em",{parentName:"p"},"content")," being displayed in the active application:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Inside a browser, the ",(0,a.kt)("inlineCode",{parentName:"li"},"title")," might be the ",(0,a.kt)("em",{parentName:"li"},"webpage title"),".\nFor example, if you are visiting YouTube inside Chrome, the ",(0,a.kt)("inlineCode",{parentName:"li"},"title")," is either ",(0,a.kt)("inlineCode",{parentName:"li"},"YouTube"),"\nor the video title."),(0,a.kt)("li",{parentName:"ul"},"Inside an editor, the ",(0,a.kt)("inlineCode",{parentName:"li"},"title")," might refer to the file being edited.\nFor example, while editing this documentation file inside Visual Studio Code, the\ndetected title is ",(0,a.kt)("inlineCode",{parentName:"li"},"app-specific-configurations.md - website-cocmd - Visual Studio Code"),".")),(0,a.kt)("p",null,"This opens up a few interesting use-cases. For example, you might create\n",(0,a.kt)("strong",{parentName:"p"},"an app-specific configuration that only activates when ",(0,a.kt)("em",{parentName:"strong"},"visiting a particular website")),",\nor one that would only activate while editing a specific project/document."),(0,a.kt)("p",null,"For example, here's a configuration that would disable Cocmd when the active page is YouTube:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="config/disable_on_youtube.yml"',title:'"config/disable_on_youtube.yml"'},"filter_title: YouTube\nenable: false\n")))}d.isMDXComponent=!0},7459:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/config-inheritance-b25da0bbd5d76f5a4da5f0f34ea975f7.png"},7071:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/detectwindow-422fad7ff19111af1cf2d65aba5c6365.png"}}]);